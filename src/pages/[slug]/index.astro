---
import { prisma } from "../../../utils/prisma";
import Layout from "../../layouts/Layout.astro";
// import { getHighlighter, codeToHtml } from "shiki";
import "highlight.js/styles/atom-one-dark.min.css";
import hljs from "highlight.js";

const { slug } = Astro.params;
const data = await prisma.paste.findFirst({
  where: {
    slug: slug,
  },
});

if (data === null) {
  return Astro.redirect("/");
}

const html = hljs.highlightAuto(data.content).value;
---

<Layout title="Faste - Create your pastes faster">
  <main
    class="w-full h-screen bg-neutral-900 pt-3 flex flex-row overflow-y-scroll"
  >
    <div class="h-full flex min-w-12 max-w-12 items-center flex-col">
      {
        data.content
          .split("\n")
          .map((_, idx) => <span class="text-sm text-gray-400">{idx + 1}</span>)
      }
    </div>
    <pre
      id="code"
      class="text-sm font-code resize-none h-max w-max outline-none ring-none border-none text-gray-300 bg-neutral-900 pt-[1px] px-12 pl-0 overflow-hidden"
      id="content"
      set:html={html}
    />
  </main>
  <section
    class="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white flex divide-neutral-700"
  >
    <button
      id="copy"
      class="border bg-neutral-900 border-neutral-700 px-4 py-2 rounded-r hover:bg-neutral-950 active:bg-neutral-900"
    >
      Copy Link<br />
      <div class="hidden sm:block">
        <kbd>CTRL</kbd>
        +
        <kbd>q</kbd>
      </div>
    </button>

    <button
      id="raw"
      class="border bg-neutral-900 border-neutral-700 px-4 py-2 rounded-r hover:bg-neutral-950 active:bg-neutral-900"
    >
      View raw<br />
      <div class="hidden sm:block">
        <kbd>CTRL</kbd>
        +
        <kbd>r</kbd>
      </div>
    </button>
  </section>
</Layout>

<!-- use is:inline to avoid astro scoping as the html in the set:html doesn't have astro's scope -->
<style is:inline>
  .shiki {
    background-color: #171717 !important;
  }
</style>

<script>
  const $viewRawButton = document.querySelector("#raw");
  if ($viewRawButton instanceof HTMLButtonElement) {
    $viewRawButton.onclick = () => {
      const newUrl = `${window.location.origin}${window.location.pathname}/raw`;
      window.location.href = newUrl;
    };
  }
  window.addEventListener("keydown", async (event) => {
    if (event.ctrlKey && event.key.toLowerCase() === "r") {
      event.preventDefault();
      const newUrl = `${window.location.origin}${window.location.pathname}/raw`;
      window.location.href = newUrl;
    }

    if (event.ctrlKey && event.key.toLowerCase() === "q") {
      event.preventDefault();
      navigator.clipboard.writeText(window.location.href);
    }
  });
</script>

<style>
  #content {
    scrollbar-width: thin;
    scrollbar-arrow-color: #fff;
    scrollbar-base-color: #fff;
    scrollbar-color: #363636 #222; /* thumb and track color */
  }
</style>
