---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Faste - Create your pastes faster">
  <main class="w-screen h-screen bg-neutral-900 py-3 pr-2 flex flex-row">
    <span
      id="tooltip"
      class="absolute left-1/2 transform -translate-x-1/2 bg-neutral-800 text-white ring-green-700 rounded p-2 ring-1 -translate-y-20 transition-transform"
      >Emptied current paste</span
    >
    <div class="h-full flex w-12 items-start justify-center">
      <span class="text-sm text-gray-400">&gt;</span>
    </div>
    <textarea
      autofocus
      id="content"
      class="font-code text-sm tracking-tight resize-none h-full w-full outline-none ring-none border-none bg-neutral-900 text-white pt-[1px] px-12 pl-0"
    ></textarea>
    <section
      class="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white flex divide-neutral-700"
    >
      <button
        tabindex="0"
        id="save"
        class="w-30 md:w-36 lg:w-48 border bg-neutral-900 border-neutral-700 px-4 py-2 rounded-l hover:bg-neutral-950 active:bg-neutral-900"
      >
        Create new paste<br />
        <div class="hidden sm:block">
          <kbd>CTRL</kbd>
          +
          <kbd>S</kbd>
        </div>
      </button>
      <button
        id="new"
        class="w-30 md:w-36 lg:w-48 border bg-neutral-900 border-neutral-700 px-4 py-2 rounded-r hover:bg-neutral-950 active:bg-neutral-900"
      >
        Empty current paste<br />
        <div class="hidden sm:block">
          <kbd>CTRL</kbd>
          +
          <kbd>Q</kbd>
        </div>
      </button>
    </section>
  </main>
</Layout>

<script>
  const $saveButton = document.querySelector("#save");
  const $newButton = document.querySelector("#new");
  const $textarea = document.querySelector("#content") as HTMLTextAreaElement;
  const $tooltip = document.querySelector("#tooltip")!;

  async function saveData() {
    const res = await fetch("/api/create", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ content: $textarea.value }),
    });
    res.json().then((data) => {
      window.location.href = data.link;
    });
  }

  if ($saveButton instanceof HTMLButtonElement) {
    $saveButton.onclick = async () => {
      await saveData();
    };
  }

  if ($newButton instanceof HTMLButtonElement) {
    $newButton.onclick = () => {
      const success = confirm(
        "Are you sure you want to empty the current paste?"
      );
      if (success) {
        $textarea.value = "";

        $tooltip.classList.replace("-translate-y-20", "translate-y-0");
        setTimeout(() => {
          $tooltip.classList.replace("translate-y-0", "-translate-y-20");
        }, 1000);
      }
    };
  }

  window.addEventListener("keydown", async (event) => {
    if (event.ctrlKey && event.key.toLowerCase() === "s") {
      event.preventDefault();
      console.log("hola");
      await saveData();
    }

    if (event.ctrlKey && event.key.toLowerCase() === "q") {
      event.preventDefault();
      const success = confirm(
        "Are you sure you want to empty the current paste?"
      );
      if (success) {
        $textarea.value = "";

        $tooltip.classList.replace("-translate-y-20", "translate-y-0");
        setTimeout(() => {
          $tooltip.classList.replace("translate-y-0", "-translate-y-20");
        }, 1000);
      }
    }
  });
</script>

<style>
  textarea {
    scrollbar-arrow-color: #fff;
    scrollbar-base-color: #fff;
    scrollbar-color: #363636 #222; /* thumb and track color */
  }
</style>
